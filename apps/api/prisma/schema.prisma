generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String @id @default(uuid())
  name     String
  email    String @unique
  password String

  roles Role[]

  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt
  Person    Person[]
  Session   Session[]

  @@map("users")
}

model Session {
  id           String    @id @default(uuid())
  sessionToken String
  userId       String    @map("user_id")
  user         User      @relation(fields: [userId], references: [id])
  expires      DateTime
  createdAt    DateTime  @default(now()) @map("created_at")
  updatedAt    DateTime? @updatedAt

  @@map("sessions")
}

model Role {
  id   String @id @default(uuid())
  name String @unique

  User   User?   @relation(fields: [userId], references: [id])
  userId String?

  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt

  @@map("roles")
}

model Person {
  id            String @id @default(uuid())
  name          String
  gender        String
  birthDate     String @map("birth_date")
  maritalStatus String @map("matrial_status")

  user   User   @relation(fields: [userId], references: [id])
  userId String @map("user_id")

  address Address[]

  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt

  @@map("person")
}

model Address {
  id         String @id @default(uuid())
  postalCode String @map("postal_code")
  address    String
  number     String
  district   String
  state      String
  city       String
  person     Person @relation(fields: [personId], references: [id])
  personId   String @map("person_id")

  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt

  @@map("address")
}
